alias: Arrosage - Zone [X]
description: >-
  Lance un cycle d'arrosage de la zone [X].
  Si vous avez moins de [X] voies d'arrosage vous pouvez supprimer ce script.
triggers:
  - entity_id:
      - input_boolean.arrosage_auto_zone_[X]
    from: "off"
    to: "on"
    trigger: state
conditions: []
actions:
  - choose:
      - conditions:
          - condition: numeric_state
            entity_id: input_number.arrosage_electrovannes_incluses_zone_[X]
            below: 1
        sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: 500
          - action: input_boolean.turn_off
            metadata: {}
            data: {}
            target:
              entity_id:
                - input_boolean.arrosage_auto_zone_[X]
          - sequence:
              - condition: state
                entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                state: "on"
              - action: script.envoi_notification_vers_mon_telephone
                data:
                  message: >-
                    Le cycle d'arrosage de la zone {{
                    state_attr('sensor.arrosage_noms_des_zones', 'zone_[X]') }} ne
                    peut pas démarrer car aucune éléctrovanne n'est incluse dans
                    le cycle de la zone.
                  color: red
                  tag: arrosage
                  icon: mdi:sprinkler-variant
                  persistent: "true"
            alias: Notification application mobile
          - sequence:
              - condition: state
                entity_id: input_boolean.arrosage_enable_telegram_notifications
                state: "on"
              - action: telegram_bot.send_message
                data:
                  title: >-
                    Arrosage - Problème
                  message: >-
                    Le cycle d'arrosage de la zone {{
                    state_attr('sensor.arrosage_noms_des_zones', 'zone_[X]') }} ne
                    peut pas démarrer car aucune éléctrovanne n'est incluse dans
                    le cycle de la zone.
            alias: Notification Télégram
      - conditions:
          - condition: state
            entity_id: binary_sensor.arrosage_electrovannes_connected
            state: "on"
        sequence:
          - sequence:
              - condition: state
                entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                state: "on"
              - action: script.envoi_notification_vers_mon_telephone
                data:
                  message: >-
                    Arrosage démarré {{ as_timestamp(now()) |
                    timestamp_custom('à %-H:%M') }}
                  title: "{{ state_attr('sensor.arrosage_noms_des_zones', 'zone_[X]') }}"
                  tag: arrosage zone [X]
                  color: cyan
                  icon: mdi:sprinkler-variant
                  persistent: "true"
            alias: Notification application mobile
          - sequence:
              - condition: state
                entity_id: input_boolean.arrosage_enable_telegram_notifications
                state: "on"
              - action: telegram_bot.send_message
                data:
                  message: >-
                    Arrosage démarré {{ as_timestamp(now()) |
                    timestamp_custom('à %-H:%M') }}
                  title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_[X]') }}"
            alias: Notification Télégram
          - action: input_datetime.set_datetime
            target:
              entity_id: input_datetime.arrosage_duree_cycle_zone_[X]
            data:
              timestamp: >-
                {% set ns = namespace(duree = as_timestamp(now()) + 60) %} {%
                for item in label_entities("Zone [X]") | select('match',
                'script.arrosage_declenchement_auto_voie') | sort %}
                  {% set ns.duree = ns.duree + states('input_number.arrosage_duree_voie_' ~ item[-1]) | float if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.duree %}
                {% endfor %} {{ns.duree}}
          - repeat:
              for_each: >-
                {{ label_entities('Zone [X]') | select('match',
                'script.arrosage_declenchement_auto_voie') | sort }}
              sequence:
                - action: "{{repeat.item}}"
                  data: {}
          - action: input_boolean.turn_off
            metadata: {}
            data: {}
            target:
              entity_id:
                - input_boolean.arrosage_auto_zone_[X]
          - sequence:
              - condition: state
                entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                state: "on"
              - action: script.envoi_notification_vers_mon_telephone
                data:
                  message: clear_notification
                  tag: arrosage zone [X]
            alias: Notification application mobile
          - sequence:
              - condition: state
                entity_id: input_boolean.arrosage_enable_telegram_notifications
                state: "on"
              - action: telegram_bot.send_message
                data:
                  message: >-
                    Arrosage terminé {{ as_timestamp(now()) |
                    timestamp_custom('à %-H:%M') }}
                  title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_[X]') }}"
            alias: Notification Télégram
      - conditions:
          - condition: state
            entity_id: binary_sensor.arrosage_electrovannes_connected
            state: "off"
        sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
          - action: input_boolean.turn_off
            metadata: {}
            data: {}
            target:
              entity_id:
                - input_boolean.arrosage_auto_zone_[X]
          - sequence:
              - condition: state
                entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                state: "on"
              - action: script.envoi_notification_vers_mon_telephone
                data:
                  message: >-
                    L'arrosage ne peut pas démarrer. Les programmateurs
                    d'arrosage ne sont pas connectés.
                  color: red
                  tag: arrosage
                  icon: mdi:sprinkler-variant
                  persistent: "true"
mode: single