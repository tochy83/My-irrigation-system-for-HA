automation:

  - id: 'arrosage_init_at_restart'
    alias: Arrosage - Initialisation au redemarrage
    description: "Initialise le nombre de zones et de voies au dÃ©marrage de Home Assistant"
    triggers:
      - trigger: homeassistant
        event: start
    conditions: []
    actions:
      - action: shell_command.arrosage_correspondance_materiel
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {{ (states['switch'] |
            selectattr('entity_id','match','switch.arrosage_electrovanne_')
            |selectattr('state', 'in', ['on', 'off'])
            |map(attribute='entity_id') | list | count) }}
        target:
          entity_id: input_number.arrosage_nb_file_voies
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {{ (states['input_boolean'] |
            selectattr('entity_id','match','input_boolean.arrosage_auto_zone_')
            |selectattr('state', 'in', ['on', 'off'])
            |map(attribute='entity_id') | list | count) }}
        target:
          entity_id: input_number.arrosage_nb_file_zones
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set switch = (states['switch'] | selectattr('entity_id','match','switch.arrosage_electrovanne_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list) %}
            {%- set boolean = (states['input_boolean'] | selectattr('entity_id','match','input_boolean.arrosage_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list ) %}
            {%- set text = (states['input_text'] | selectattr('entity_id','match','input_text.arrosage_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list ) %}
            {%- set number = (states['input_number'] | selectattr('entity_id','match','input_number.arrosage_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list ) %}
            {%- set datetime = (states['input_datetime'] | selectattr('entity_id','match','input_datetime.arrosage_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list ) %}
            {%- set timer = (states['timer'] | selectattr('entity_id','match','timer.arrosage_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list ) %}
            {%- set automation = (states['automation'] | selectattr('entity_id','match','automation.arrosage_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list ) %}
            {%- set script = (states['script'] | selectattr('entity_id','match','script.arrosage_') | selectattr('state', 'in', ['unavailable']) | map(attribute='entity_id') | list ) %}
            {%- set nb_entites_orphelines = boolean|count + text|count + number|count + datetime|count + timer|count + switch|count + automation|count + script|count %}
            {{ nb_entites_orphelines }}
        target:
          entity_id: input_number.arrosage_nb_entites_orphelines
    mode: single