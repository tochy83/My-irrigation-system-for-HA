# Name : automatisations.yaml
# Dans ce fichier, se trouve toutes les automatisations nécessaires pour 9 voies et 3 zones d'arrosage.


automation:

  - id: 'arrosage_alerte'
    alias: Arrosage - Alerte
    description: >-
      Envoi une notification sur le téléphone si l'heure prévue de fin du cycle
      d'arrosage est passée et que l'arrosage est encore marche.


      Cette automatisation est déja pré-configurée pour prendre en compte jusqu'à 9 zones d'arrosage.
      Si vous avez besoin de plus de 9 zones il faudra ajouter autant de triggers que de nouvelles zones
      (Dupliquer le dernier trigger et modifier dans le trigger dupliqué le numero de zone, partout ou il apparait dans le bloc)
      et dans la partie action autant de bloc options que de nouvelles zones
      (Dupliquer le dernier bloc option et modifier dans le bloc dupliqué le numero de zone, partout ou il apparait dans le bloc).
    triggers:
      - at: input_datetime.arrosage_duree_cycle_zone_1
        id: zone 1
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_2
        id: zone 2
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_3
        id: zone 3
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_4
        id: zone 4
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_5
        id: zone 5
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_6
        id: zone 6
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_7
        id: zone 7
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_8
        id: zone 8
        trigger: time
      - at: input_datetime.arrosage_duree_cycle_zone_9
        id: zone 9
        trigger: time
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_zone_status
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: input_boolean.arrosage_enable_mobileapp_notifications
            state: "on"
          - condition: state
            entity_id: input_boolean.arrosage_enable_telegram_notifications
            state: "on"
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - zone 1
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_1
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_1') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_1') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 1
          - conditions:
              - condition: trigger
                id:
                  - zone 2
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_2
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_2') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_2') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 2
          - conditions:
              - condition: trigger
                id:
                  - zone 3
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_3
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_3') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_3') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 3
          - conditions:
              - condition: trigger
                id:
                  - zone 4
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_4
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_4') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_4') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 4
          - conditions:
              - condition: trigger
                id:
                  - zone 5
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_5
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_5') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_5') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 5
          - conditions:
              - condition: trigger
                id:
                  - zone 6
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_6
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_6') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_6') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 6
          - conditions:
              - condition: trigger
                id:
                  - zone 7
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_7
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_7') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_7') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 7
          - conditions:
              - condition: trigger
                id:
                  - zone 8
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_8
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_8') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_8') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 8
          - conditions:
              - condition: trigger
                id:
                  - zone 9
              - condition: state
                entity_id: input_boolean.arrosage_auto_zone_9
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_9') }}
                        semble être toujours en cours !
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: "Arrosage - Attention"
                      message: >-
                        L'arrosage de la zone
                        {{state_attr('sensor.arrosage_noms_des_zones', 'zone_9') }}
                        semble être toujours en cours !
                alias: Notification Télégram
            alias: Zone 9
    mode: single

  - id: 'arrosage_calendrier'
    alias: Arrosage - Calendrier
    description: >-
      Détecte les événéments sur le calendrier Arrosage pour démarrer les cycles
      d'arrosage programmés


      Cette automatisation est déja pré-configurée pour prendre en compte jusqu'à 9 zones d'arrosage.
      Si vous avez besoin de plus de 9 zones il faudra ajouter dans la partie actions autant de bloc options que de nouvelles zones
      (Dupliquer le dernier bloc option et modifier dans le bloc dupliqué le numero de zone, partout ou il apparait dans le bloc).      
    triggers:
      - event: start
        offset: "0:0:0"
        entity_id: calendar.arrosage
        trigger: calendar
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_1') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_1
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_1
                action: input_boolean.turn_on
            alias: Zone 1
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_2') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_2
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_2
                action: input_boolean.turn_on
            alias: Zone 2
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_3') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_3
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_3
                action: input_boolean.turn_on
            alias: Zone 3
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_4') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_4
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_4
                action: input_boolean.turn_on
            alias: Zone 4
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_5') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_5
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_5
                action: input_boolean.turn_on
            alias: Zone 5
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_6') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_6
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_6
                action: input_boolean.turn_on
            alias: Zone 6
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_7') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_7
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_7
                action: input_boolean.turn_on
            alias: Zone 7
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_8') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_8
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_8
                action: input_boolean.turn_on
            alias: Zone 8
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_9') in
                  trigger.calendar_event.summary }}
              - condition: state
                entity_id: input_boolean.arrosage_programmation_zone_9
                state: "on"
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_9
                action: input_boolean.turn_on
            alias: Zone 9
    mode: single

  - id: 'arrosage_voie_1'
    alias: Arrosage - Voie 1
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 1 et le stockage des données
      propre à cette voie.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_1
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_1
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_1
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_1
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_1') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: timer.arrosage_voie_1
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: switch.arrosage_electrovanne_1
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_1
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_1
    mode: single

  - id: 'arrosage_voie_2'
    alias: Arrosage - Voie 2
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 2 et le stockage des données
      propre à cette voie.

      Si vous avez moins de 2 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_2
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_2
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_2
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_2
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_2') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: timer.arrosage_voie_2
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: switch.arrosage_electrovanne_2
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_2
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_2
    mode: single

  - id: 'arrosage_voie_3'
    alias: Arrosage - Voie 3
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 3 et le stockage des données
      propre à cette voie.


      Si vous avez moins de 3 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_3
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_3
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_3
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_3
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_3') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: timer.arrosage_voie_3
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: switch.arrosage_electrovanne_3
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_3
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_3
    mode: single

  - id: 'arrosage_voie_4'
    alias: Arrosage - Voie 4
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 4 et le stockage des données
      propre à cette voie.


      Si vous avez moins de 4 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_4
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_4
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_4
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_4
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_4') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: timer.arrosage_voie_4
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: switch.arrosage_electrovanne_4
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_4
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_4
    mode: single

  - id: 'arrosage_voie_5'
    alias: Arrosage - Voie 5
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 5 et le stockage des données
      propre à cette voie.


      Si vous avez moins de 5 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_5
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_5
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_5
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_5
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_5') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: timer.arrosage_voie_5
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id: switch.arrosage_electrovanne_5
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_5
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_5
    mode: single

  - id: 'arrosage_voie_6'
    alias: Arrosage - Voie 6
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 6 et le stockage des données
      propre à cette voie.


      Si vous avez moins de 6 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_6
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_6
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_6
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_6
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_6') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - timer.arrosage_voie_6
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - switch.arrosage_electrovanne_6
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_6
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_6
    mode: single

  - id: 'arrosage_voie_7'
    alias: Arrosage - Voie 7
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 7 et le stockage des données
      propre à cette voie.


      Si vous avez moins de 7 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_7
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_7
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_7
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_7
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_7') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - timer.arrosage_voie_7
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - switch.arrosage_electrovanne_7
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_7
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_7
    mode: single

  - id: 'arrosage_voie_8'
    alias: Arrosage - Voie 8
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 8 et le stockage des données
      propre à cette voie.


      Si vous avez moins de 8 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_8
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_8
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_8
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_8
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_8') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - timer.arrosage_voie_8
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - switch.arrosage_electrovanne_8
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_8
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_8
    mode: single

  - id: 'arrosage_voie_9'
    alias: Arrosage - Voie 9
    description: >-
      Permet de démarrer/arrêter le minuteur de la voie 9 et le stockage des données
      propre à cette voie.


      Si vous avez moins de 9 voies d'arrosage vous pouvez supprimer cette
      automatisation.
    triggers:
      - entity_id:
          - switch.arrosage_electrovanne_9
        from: "off"
        to: "on"
        id: marche
        trigger: state
      - entity_id:
          - switch.arrosage_electrovanne_9
        from: "on"
        to: "off"
        id: arret
        trigger: state
      - event_type: timer.finished
        event_data:
          entity_id: timer.arrosage_voie_9
        id: arret timer
        trigger: event
    conditions:
      - condition: state
        entity_id: binary_sensor.arrosage_electrovannes_connected
        state: "on"
        alias: >-
          Vérifier si les électrovannes sont connectées avant de lancer les actions. Si
          vous ne voulez pas faire cette vérification (qui n'est pas obligatoire) vous
          pouvez désactiver cette condition.
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - marche
            sequence:
              - data:
                  value: "{{ states('sensor.arrosage_compteur_eau') }}"
                action: input_text.set_value
                target:
                  entity_id:
                    - input_text.arrosage_volume_depart
              - target:
                  entity_id: timer.arrosage_voie_9
                data:
                  duration: "{{ states('input_number.arrosage_duree_voie_9') }}"
                action: timer.start
          - conditions:
              - condition: trigger
                id:
                  - arret
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - timer.arrosage_voie_9
                action: timer.finish
          - conditions:
              - condition: trigger
                id:
                  - arret timer
            sequence:
              - metadata: {}
                data: {}
                target:
                  entity_id:
                    - switch.arrosage_electrovanne_9
                action: switch.turn_off
              - data:
                  value: "{{ as_local(now()) }}"
                target:
                  entity_id: input_text.arrosage_dernier_declenchement_voie_9
                action: input_text.set_value
              - data:
                  value: >-
                    {{ states('sensor.arrosage_compteur_eau')|int -
                    states('input_text.arrosage_volume_depart')|int }}
                action: input_text.set_value
                target:
                  entity_id: input_text.arrosage_volume_voie_9
    mode: single

  - id: 'arrosage_zone_1'
    alias: Arrosage - Zone 1
    description: >-
      Lance un cycle d'arrosage de la zone 1.
    triggers:
      - entity_id:
          - input_boolean.arrosage_auto_zone_1
        from: "off"
        to: "on"
        trigger: state
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: input_number.arrosage_electrovannes_incluses_zone_1
                below: 1
            sequence:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: 500
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_1
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        Le cycle d'arrosage de la zone {{
                        state_attr('sensor.arrosage_noms_des_zones', 'zone_1') }} ne
                        peut pas démarrer car aucune éléctrovanne n'est incluse dans
                        le cycle de la zone.
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: >-
                        Arrosage - Problème
                      message: >-
                        Le cycle d'arrosage de la zone {{
                        state_attr('sensor.arrosage_noms_des_zones', 'zone_1') }} ne
                        peut pas démarrer car aucune éléctrovanne n'est incluse dans
                        le cycle de la zone.
                alias: Notification Télégram
          - conditions:
              - condition: state
                entity_id: binary_sensor.arrosage_electrovannes_connected
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        Arrosage démarré {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "{{ state_attr('sensor.arrosage_noms_des_zones', 'zone_1') }}"
                      tag: arrosage zone 1
                      color: cyan
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      message: >-
                        Arrosage démarré {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_1') }}"
                alias: Notification Télégram
              - action: input_datetime.set_datetime
                target:
                  entity_id: input_datetime.arrosage_duree_cycle_zone_1
                data:
                  timestamp: >-
                    {% set ns = namespace(duree = as_timestamp(now()) + 60) %} {%
                    for item in label_entities("Zone 1") | select('match',
                    'script.arrosage_declenchement_auto_voie') | sort %}
                      {% set ns.duree = ns.duree + states('input_number.arrosage_duree_voie_' ~ item[-1]) | float if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.duree %}
                    {% endfor %} {{ns.duree}}
              - repeat:
                  for_each: >-
                    {{ label_entities('Zone 1') | select('match',
                    'script.arrosage_declenchement_auto_voie') | sort }}
                  sequence:
                    - action: "{{repeat.item}}"
                      data: {}
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_1
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: clear_notification
                      tag: arrosage zone 1
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      message: >-
                        Arrosage terminé {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_1') }}"
                alias: Notification Télégram
          - conditions:
              - condition: state
                entity_id: binary_sensor.arrosage_electrovannes_connected
                state: "off"
            sequence:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_1
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage ne peut pas démarrer. Les programmateurs
                        d'arrosage ne sont pas connectés.
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
    mode: single

  - id: 'arrosage_zone_2'
    alias: Arrosage - Zone 2
    description: >-
      Lance un cycle d'arrosage de la zone 2.


      Si vous avez moins de 2 voies d'arrosage vous pouvez supprimer ce script.
    triggers:
      - entity_id:
          - input_boolean.arrosage_auto_zone_2
        from: "off"
        to: "on"
        trigger: state
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: input_number.arrosage_electrovannes_incluses_zone_2
                below: 1
            sequence:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: 500
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_2
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        Le cycle d'arrosage de la zone {{
                        state_attr('sensor.arrosage_noms_des_zones', 'zone_2') }} ne
                        peut pas démarrer car aucune éléctrovanne n'est incluse dans
                        le cycle de la zone.
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: >-
                        Arrosage - Problème
                      message: >-
                        Le cycle d'arrosage de la zone {{
                        state_attr('sensor.arrosage_noms_des_zones', 'zone_2') }} ne
                        peut pas démarrer car aucune éléctrovanne n'est incluse dans
                        le cycle de la zone.
                alias: Notification Télégram
          - conditions:
              - condition: state
                entity_id: binary_sensor.arrosage_electrovannes_connected
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        Arrosage démarré {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "{{ state_attr('sensor.arrosage_noms_des_zones', 'zone_2') }}"
                      tag: arrosage zone 2
                      color: cyan
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      message: >-
                        Arrosage démarré {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_2') }}"
                alias: Notification Télégram
              - action: input_datetime.set_datetime
                target:
                  entity_id: input_datetime.arrosage_duree_cycle_zone_2
                data:
                  timestamp: >-
                    {% set ns = namespace(duree = as_timestamp(now()) + 60) %} {%
                    for item in label_entities("Zone 2") | select('match',
                    'script.arrosage_declenchement_auto_voie') | sort %}
                      {% set ns.duree = ns.duree + states('input_number.arrosage_duree_voie_' ~ item[-1]) | float if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.duree %}
                    {% endfor %} {{ns.duree}}
              - repeat:
                  for_each: >-
                    {{ label_entities('Zone 2') | select('match',
                    'script.arrosage_declenchement_auto_voie') | sort }}
                  sequence:
                    - action: "{{repeat.item}}"
                      data: {}
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_2
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: clear_notification
                      tag: arrosage zone 2
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      message: >-
                        Arrosage terminé {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_2') }}"
                alias: Notification Télégram
          - conditions:
              - condition: state
                entity_id: binary_sensor.arrosage_electrovannes_connected
                state: "off"
            sequence:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_2
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage ne peut pas démarrer. Les programmateurs
                        d'arrosage ne sont pas connectés.
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
    mode: single

  - id: 'arrosage_zone_3'
    alias: Arrosage - Zone 3
    description: >-
      Lance un cycle d'arrosage de la zone 3.


      Si vous avez moins de 3 voies d'arrosage vous pouvez supprimer ce script.
    triggers:
      - entity_id:
          - input_boolean.arrosage_auto_zone_3
        from: "off"
        to: "on"
        trigger: state
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: input_number.arrosage_electrovannes_incluses_zone_3
                below: 1
            sequence:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: 500
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_3
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        Le cycle d'arrosage de la zone {{
                        state_attr('sensor.arrosage_noms_des_zones', 'zone_3') }} ne
                        peut pas démarrer car aucune éléctrovanne n'est incluse dans
                        le cycle de la zone.
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      title: >-
                        Arrosage - Problème
                      message: >-
                        Le cycle d'arrosage de la zone {{
                        state_attr('sensor.arrosage_noms_des_zones', 'zone_3') }} ne
                        peut pas démarrer car aucune éléctrovanne n'est incluse dans
                        le cycle de la zone.
                alias: Notification Télégram
          - conditions:
              - condition: state
                entity_id: binary_sensor.arrosage_electrovannes_connected
                state: "on"
            sequence:
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        Arrosage démarré {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "{{ state_attr('sensor.arrosage_noms_des_zones', 'zone_3') }}"
                      tag: arrosage zone 3
                      color: cyan
                      icon: mdi:sprinkler-variant
                      persistent: "true"
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      message: >-
                        Arrosage démarré {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_3') }}"
                alias: Notification Télégram
              - action: input_datetime.set_datetime
                target:
                  entity_id: input_datetime.arrosage_duree_cycle_zone_3
                data:
                  timestamp: >-
                    {% set ns = namespace(duree = as_timestamp(now()) + 60) %} {%
                    for item in label_entities("Zone 3") | select('match',
                    'script.arrosage_declenchement_auto_voie') | sort %}
                      {% set ns.duree = ns.duree + states('input_number.arrosage_duree_voie_' ~ item[-1]) | float if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.duree %}
                    {% endfor %} {{ns.duree}}
              - repeat:
                  for_each: >-
                    {{ label_entities('Zone 3') | select('match',
                    'script.arrosage_declenchement_auto_voie') | sort }}
                  sequence:
                    - action: "{{repeat.item}}"
                      data: {}
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_3
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: clear_notification
                      tag: arrosage zone 3
                alias: Notification application mobile
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_telegram_notifications
                    state: "on"
                  - action: telegram_bot.send_message
                    data:
                      message: >-
                        Arrosage terminé {{ as_timestamp(now()) |
                        timestamp_custom('à %-H:%M') }}
                      title: "Arrosage - {{ state_attr('sensor.arrosage_noms_des_zones', 'zone_3') }}"
                alias: Notification Télégram
          - conditions:
              - condition: state
                entity_id: binary_sensor.arrosage_electrovannes_connected
                state: "off"
            sequence:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
              - action: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id:
                    - input_boolean.arrosage_auto_zone_3
              - sequence:
                  - condition: state
                    entity_id: input_boolean.arrosage_enable_mobileapp_notifications
                    state: "on"
                  - action: script.envoi_notification_vers_mon_telephone
                    data:
                      message: >-
                        L'arrosage ne peut pas démarrer. Les programmateurs
                        d'arrosage ne sont pas connectés.
                      color: red
                      tag: arrosage
                      icon: mdi:sprinkler-variant
                      persistent: "true"
    mode: single

  - id: 'arrosage_nombre_electrovannes_incluses_par_zone'
    alias: Arrosage - Nombre électrovannes incluses par zone
    description: >-
      Calcule le nombre d'électrovannes qui sont cochées dans le cycle d'arrosage de
      chaque zone.


      Cette automatisation est déja pré-configurée pour prendre en compte jusqu'à 9 zones et 9 voies d'arrosage.
      Si vous avez besoin de plus de 9 voies, il faudra ajouter autant de triggers que de nouvelles voies
      (Dupliquer le dernier trigger et modifier dans le trigger dupliqué le numero de zone.
      Si vous avez besoin de plus de 9 zones, il faudra ajouter autant de nouvelles actions que de nouvelles zones
      (Dupliquer la dernière action et modifier dans l'action dupliquée le numero de zone, partout ou il apparait dans l'action).
    triggers:
      - trigger: state
        entity_id:
          - input_boolean.arrosage_enable_voie_1
          - input_boolean.arrosage_enable_voie_2
          - input_boolean.arrosage_enable_voie_3
          - input_boolean.arrosage_enable_voie_4
          - input_boolean.arrosage_enable_voie_5
          - input_boolean.arrosage_enable_voie_6
          - input_boolean.arrosage_enable_voie_7
          - input_boolean.arrosage_enable_voie_8
          - input_boolean.arrosage_enable_voie_9
    conditions: []
    actions:
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 1") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_1
        alias: Zone 1
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 2") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id:
            - input_number.arrosage_electrovannes_incluses_zone_2
        alias: Zone 2
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 3") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_3
        alias: Zone 3
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 4") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_4
        alias: Zone 4
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 5") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_5
        alias: Zone 5
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 6") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_6
        alias: Zone 6
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 7") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_7
        alias: Zone 7
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 8") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_8
        alias: Zone 8
      - action: input_number.set_value
        metadata: {}
        data:
          value: >-
            {%- set ns = namespace(nb_electrovanne_enabled = 0) %} {%- for item in
            label_entities("Zone 9") | select('match',
            'script.arrosage_declenchement_auto_voie') | sort %}
              {%- set ns.nb_electrovanne_enabled = ns.nb_electrovanne_enabled + 1 if is_state('input_boolean.arrosage_enable_voie_' ~ item[-1], 'on') else ns.nb_electrovanne_enabled %}
            {%- endfor %} {{ns.nb_electrovanne_enabled}}
        target:
          entity_id: input_number.arrosage_electrovannes_incluses_zone_9
        alias: Zone 9
    mode: single

  - id: 'arrosage_affichage_notifications_temporaires'
    alias: Arrosage - Affichage notifications temporaires
    description: >-
      Définit la durée d'affichage des notifications temporaires ainsi que le "nom"
      de la notification concernée. Le "nom" sert dans les conditions de visibilité
      de la carte notification concernée.


      Cette automatisation est déja pré-configurée pour prendre en compte jusqu'à 9 zones d'arrosage.
      Si vous avez besoin de plus de 9 zones il faudra ajouter autant de triggers que de nouvelles zones
      (Dupliquer les 2 dernier triggers et modifier dans chaque trigger dupliqué le numero de zone, partout ou il apparait dans le bloc).
    triggers:
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_1
        id: programmation_zone_1
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_1
        from: "off"
        to: "on"
        id: auto_zone_1
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_2
        id: programmation_zone_2
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_2
        from: "off"
        to: "on"
        id: auto_zone_2
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_3
        id: programmation_zone_3
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_3
        from: "off"
        to: "on"
        id: auto_zone_3
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_4
        id: programmation_zone_4
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_4
        from: "off"
        to: "on"
        id: auto_zone_4
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_5
        id: programmation_zone_5
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_5
        from: "off"
        to: "on"
        id: auto_zone_5
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_6
        id: programmation_zone_6
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_6
        from: "off"
        to: "on"
        id: auto_zone_6
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_7
        id: programmation_zone_7
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_7
        from: "off"
        to: "on"
        id: auto_zone_7
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_8
        id: programmation_zone_8
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_8
        from: "off"
        to: "on"
        id: auto_zone_8
      - trigger: state
        entity_id:
          - input_boolean.arrosage_programmation_zone_9
        id: programmation_zone_9
      - trigger: state
        entity_id:
          - input_boolean.arrosage_auto_zone_9
        from: "off"
        to: "on"
        id: auto_zone_9
    conditions: []
    actions:
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.arrosage_display_notifications
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 250
        enabled: true
      - action: input_text.set_value
        metadata: {}
        data:
          value: "{{ trigger.id }}"
        target:
          entity_id: input_text.arrosage_display_notifications_choix
        alias: >-
          On stocke le trigger_id ce qui va nous permettre de choisir la
          notification à afficher
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.arrosage_display_notifications
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
        alias: >-
          Le temps de délai entré ici sert à définir la durée d'affichage des notifications
          temporaires
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.arrosage_display_notifications
    mode: restart

